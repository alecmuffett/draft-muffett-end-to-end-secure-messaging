



ietf-mls                                                      A. Muffett
Internet-Draft                                       Security Researcher
Intended status: Informational                                5 May 2021
Expires: 6 November 2021


          Functional Definition of End-to-End Secure Messaging
              draft-muffett-end-to-end-secure-messaging-00

Abstract

   This document defines End-to-End Secure Messaging in terms of the
   behaviours that MUST be exhibited by software which claims to
   implement it, or which claims to implement that subset which is known
   as End-to-End Encrypted Messaging.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 6 November 2021.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.





Muffett                  Expires 6 November 2021                [Page 1]

Internet-Draft                    e2esm                         May 2021


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   3
   2.  Requirements for an End-to-End Secure Messenger . . . . . . .   3
   3.  Principles  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.1.  Equality of Participation . . . . . . . . . . . . . . . .   3
     3.2.  Transparency of Participation . . . . . . . . . . . . . .   3
     3.3.  Integrity of Participation  . . . . . . . . . . . . . . .   3
       3.3.1.  Non-Participation . . . . . . . . . . . . . . . . . .   3
     3.4.  Closure of Participation  . . . . . . . . . . . . . . . .   3
   4.  Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   4
     4.1.  Participant . . . . . . . . . . . . . . . . . . . . . . .   4
     4.2.  Conversation  . . . . . . . . . . . . . . . . . . . . . .   4
     4.3.  Plaintext Content and Sensitive Metadata (PCASM)  . . . .   4
       4.3.1.  Examples of PCASM . . . . . . . . . . . . . . . . . .   4
       4.3.2.  Examples of non-PCASM . . . . . . . . . . . . . . . .   5
     4.4.  Backdoor  . . . . . . . . . . . . . . . . . . . . . . . .   6
   5.  Scope of a Participant in E2ESM . . . . . . . . . . . . . . .   6
   6.  See Also  . . . . . . . . . . . . . . . . . . . . . . . . . .   6
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   9.  Informative References  . . . . . . . . . . . . . . . . . . .   7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   End-to-End Secure Messaging (E2ESM) is a mechanism which offers a
   digital analogue of "closed distribution lists" for sharing message
   content amongst a set of participants, where all participants are
   visible to each other and where non-participants are excluded from
   access to message content.

   In client-server network models it is common to implement E2ESM by
   means of encryption, in order to obscure content at rest upon a
   central server.  So therefore E2ESM is often narrowly regarded in
   terms of "end-to-end encryption".

   Other architectural approaches exist - for instance [RicochetRefresh]
   which implements closed distribution by using secure point-to-point
   [RFC7686] networking to literally restrict the distribution of
   plaintext content to relevant participants.

   Therefore we describe E2ESM in terms of functional outcomes of the
   messenger rather than in terms of implementation goals and
   technologies.





Muffett                  Expires 6 November 2021                [Page 2]

Internet-Draft                    e2esm                         May 2021


1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  Requirements for an End-to-End Secure Messenger

   Software which functions as an End-to-End Secure Messenger MUST
   satisfy the following principles, and MUST satisfy these principles
   in respect of the provided definitions for all forms of communication
   and data-sharing that the software offers, otherwise it is not an
   End-to-End Secure Messenger.

3.  Principles

   For a series of one or more "messages" each which are comprised of
   "plaintext content and sensitive metadata" (PCASM) and which
   constitute a "conversation" amongst a set of "participants", to
   provide E2ESM will require:

3.1.  Equality of Participation

   All participants MUST be peers and MUST have equal access to any
   given message's PCASM.

3.2.  Transparency of Participation

   The existence of all current conversation participants MUST be
   visible at all times to all current conversation participants.

3.3.  Integrity of Participation

   The PCASM of any given message MUST only be available to the fixed
   set of conversation participants from whom, to whom, and at the time
   when it was sent.

3.3.1.  Non-Participation

   It follows that for any given message, all entities that exist
   outside of the above-defined set are "non-participants" in respect of
   that message.

3.4.  Closure of Participation





Muffett                  Expires 6 November 2021                [Page 3]

Internet-Draft                    e2esm                         May 2021


   1.  The set of participants in a conversation SHALL NOT be increased
       except by the intentional action of one or more existing
       participants.

   2.  2E2ESM solutions MUST provide each participant entity with means
       to review or delete the full set of clients or devices that can
       access their message PCASM.

   3.  E2ESM solutions MUST provide each participant entity with
       notifications or a complete history of all changes to their set
       of clients or devices.

4.  Definitions

   These principles MUST be measured with respect to the following
   definitions:

4.1.  Participant

   A participant is any entity - human, machine, software bot, escrow
   agent, or otherwise, that is bounded by the extent of that entity's
   [TrustedComputingBase].

4.2.  Conversation

   A conversation is a sequence of one or more messages over a period of
   time amongst a constant or evolving set of participants.

4.3.  Plaintext Content and Sensitive Metadata (PCASM)

   The PCASM of a message is defined as: 1 or more bits of information
   regarding any or all of:

   1.  the plaintext message content (the "content")

   2.  the precise size of the content

   3.  any metadata which may describe the thematic nature of the
       content

4.3.1.  Examples of PCASM

   Information which would be PCASM would include, non-exclusively:

   1.   The content is "Hello, world."

   2.   The content is definitely 13 bytes long




Muffett                  Expires 6 November 2021                [Page 4]

Internet-Draft                    e2esm                         May 2021


   3.   The content starts with the word "Hello"

   4.   The content contains the substring "ello"

   5.   The content does not contain the word "Goodbye"

   6.   The content contains a substring from amongst the following set:
        ...

   7.   The content does not contain a substring from amongst the
        following set: ...

   8.   The top bit of the first byte of the content in ASCII encoding,
        is zero

   9.   The MD5 hash of the content is 080aef839b95facf73ec599375e92d47

   10.  The hash of the content exists amongst the following set of
        hashes: ...

   11.  The hash of the content does not exist amongst the following set
        of hashes: ...

   12.  The content was matched by a machine-learning classifier with
        the following training set: ...

4.3.2.  Examples of non-PCASM

   Information which would not be PCASM would include, non-exclusively:

   1.  The content is sent from Alice

   2.  The content is sent to Bob

   3.  The content is between 1 and 16 bytes long

   4.  The content was sent at the following date and time: ...

   5.  The content was sent from the following IP address: ...

   6.  The content was sent from the following geolocation: ...

   7.  The content was composed using the following platform: ...

   There is obvious discussion to be had regarding "how fuzzy a content-
   size is fuzzy enough?"





Muffett                  Expires 6 November 2021                [Page 5]

Internet-Draft                    e2esm                         May 2021


   If the size of a message's content is at all observable by a non-
   participant, it would appear reasonable where a block cipher is used
   to implement E2ESM, to avoid visibly surfacing the underlying content
   size as a number that is any more specific or precise than an integer
   multiple of the underlying cipher block size would be.

   Stream cipher "fuzziness" adequacy is currently undefined in this
   draft.

4.4.  Backdoor

   Discussions of E2ESM frequently reference the concept of "backdoors".
   We propose a standard definition:

   A backdoor is any intentional or unintentional mechanism, in respect
   of a given message and that message's set of participants where some
   PCASM of that message may become available to a non-participant
   without the intentional action of a participant.

5.  Scope of a Participant in E2ESM

   The term "participant" in this document exists to supercede the more
   vague notion of "end" in the phrase "end-to-end".

   Participants are defined in terms of an entity's
   [TrustedComputingBase] to acknowledge that an entity may legitimately
   store, forward, or access messages by means that are outside of the
   messenger software.

   For example: if a participant accesses their E2ESM messenger via
   remote desktop software, and their RDP session is hijacked by a third
   party; of if they back-up their messages in cleartext to cloud
   storage leading somehow to data exfiltration, neither of these would
   be a failure of E2ESM.

   This would be a failure of the participant's [TrustedComputingBase].

6.  See Also

   A different approach to defining (specifically) end-to-end encryption
   is being discussed in [I-D.knodel-e2ee-definition].

7.  IANA Considerations

   This document has no IANA actions.






Muffett                  Expires 6 November 2021                [Page 6]

Internet-Draft                    e2esm                         May 2021


8.  Security Considerations

   This document is entirely comprised of security considerations.

9.  Informative References

   [I-D.knodel-e2ee-definition]
              Knodel, M., Baker, F., Kolkman, O., Celi, S., and G.
              Grover, "Definition of End-to-end Encryption", Work in
              Progress, Internet-Draft, draft-knodel-e2ee-definition-00,
              22 February 2021, <https://tools.ietf.org/html/draft-
              knodel-e2ee-definition-00>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7686]  Appelbaum, J. and A. Muffett, "The ".onion" Special-Use
              Domain Name", RFC 7686, DOI 10.17487/RFC7686, October
              2015, <https://www.rfc-editor.org/info/rfc7686>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RicochetRefresh]
              BlueprintForFreeSpeech, "Ricochet Refresh", 2021,
              <https://www.ricochetrefresh.net>.

   [TrustedComputingBase]
              Wikipedia, "Trusted Computing Base", 2021,
              <https://en.wikipedia.org/wiki/Trusted_computing_base>.

Author's Address

   Alec Muffett
   Security Researcher

   Email: alec.muffett@gmail.com











Muffett                  Expires 6 November 2021                [Page 7]
